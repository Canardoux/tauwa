// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.3.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `send`

Stream<LogEntry> traceLogger() =>
    RustLib.instance.api.crateApiSimpleTraceLogger();

/// Initialisation of the tau_core rust library
bool initTauCore() => RustLib.instance.api.crateApiSimpleInitTauCore();

void rustSetLogLevel({required int level}) =>
    RustLib.instance.api.crateApiSimpleRustSetLogLevel(level: level);

/// Greeting the user.
/// Calls several trace functions and call a rust program to play sinusoid sounds.
String greet({required String name}) =>
    RustLib.instance.api.crateApiSimpleGreet(name: name);

enum Level {
  error,
  warn,
  info,
  debug,
  trace,
  ;
}

class LogEntry {
  final int timeMillis;
  final String msg;
  final Level logLevel;
  final String lbl;

  const LogEntry({
    required this.timeMillis,
    required this.msg,
    required this.logLevel,
    required this.lbl,
  });

  @override
  int get hashCode =>
      timeMillis.hashCode ^ msg.hashCode ^ logLevel.hashCode ^ lbl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LogEntry &&
          runtimeType == other.runtimeType &&
          timeMillis == other.timeMillis &&
          msg == other.msg &&
          logLevel == other.logLevel &&
          lbl == other.lbl;
}
